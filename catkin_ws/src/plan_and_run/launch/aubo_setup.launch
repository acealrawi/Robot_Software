<?xml version="1.0" ?>
<launch>

  <arg name="sim" default="true" />
  <arg name="robot_ip" unless="$(arg sim)" />


 <!-- Load the URDF, SRDF and other .yaml configuration files on the param server -->
  <include file="$(find ur5_demo_moveit_config)/launch/planning_context.launch">
    <arg name="load_robot_description" value="true"/>
  </include>

  <!-- If needed, broadcast static tf for robot root -->
      
  <!-- Given the published joint states, publish tf for the robot links -->

  <!-- Run the main MoveIt executable without trajectory execution (we do not have controllers configured by default) -->
  <include file="$(find ur5_demo_moveit_config)/launch/move_group.launch">
    <arg name="allow_trajectory_execution" value="true"/>  
    <arg name="fake_execution" value="false"/>
    <arg name="info" value="true"/>
  </include>


  <rosparam command="load" file="$(find ur5_demo_moveit_config)/config/joint_names.yaml"/>

  <!-- run the "real robot" interface nodes -->
  <group unless="$(arg sim)">
    <!--<remap from="/joint_trajectory_action/status" to="/aubo_i5_controller/follow_joint_trajectory/status" />
    <remap from="/joint_trajectory_action/feedback" to="/aubo_i5_controller/follow_joint_trajectory/feedback" />
    <remap from="/joint_trajectory_action/result" to="/aubo_i5_controller/follow_joint_trajectory/result"  />
    <remap from="/joint_trajectory_action/goal" to="/aubo_i5_controller/follow_joint_trajectory/goal"/>
    <remap from="/joint_trajectory_action/cancel" to="/aubo_i5_controller/follow_joint_trajectory/cancel" />-->

    <include file="$(find plan_and_run)/launch/aubo_common.launch">
      <arg name="robot_ip" value="$(arg robot_ip)" />
    </include>  
    
    <!-- TF Buffer Server -->
    <node pkg="tf2_ros" type="buffer_server" name="tf2_buffer_server" output="screen">
      <param name="buffer_size" value="120.0"/>
    </node>
  </group>

 <!-- run the robot simulator and action interface nodes -->
  <group if="$(arg sim)">
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />

    <include file="$(find industrial_robot_simulator)/launch/robot_interface_simulator.launch" />
    <rosparam param="initial_joint_state">[0.0, -1.03, 0.91 , -0.21, 0.0, 0.0]</rosparam>
  </group>

  <!-- rviz -->
  <node name="rviz" type="rviz" pkg="rviz" args="-d $(find plan_and_run)/config/demo_config.rviz" required="true"/>

</launch>
